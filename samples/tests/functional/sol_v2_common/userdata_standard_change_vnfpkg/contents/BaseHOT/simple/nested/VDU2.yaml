heat_template_version: 2013-05-23
description: 'VDU2 HOT for Sample VNF'

parameters:
  flavor:
    type: string
  image-VDU2-VirtualStorage:
    type: string
  net1:
    type: string
  net2:
    type: string
  net3:
    type: string
  subnet1:
    type: string
  affinity:
    type: string

resources:
  VDU2:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      name: VDU2
      block_device_mapping_v2: [{"volume_id": { get_resource: VDU2-VirtualStorage }}]
      networks:
      - port:
          get_resource: VDU2_CP1
# replace the following line to Port ID when extManagedVLs' Ports are
# specified in InstantiateVnfRequest
      - port:
          get_resource: VDU2_CP2
      - port:
          get_resource: VDU2_CP3
      scheduler_hints:
        group: {get_param: affinity }

  VDU2-VirtualStorage:
    type: OS::Cinder::Volume
    properties:
      image: { get_param: image-VDU2-VirtualStorage }
      size: 1
      volume_type: { get_resource: multi }
  multi:
    type: OS::Cinder::VolumeType
    properties:
      # making unique name to avoid conflicting with other packages
      name: { list_join: ['-', [get_param: OS::stack_name, 'VDU2-multi']] }
      metadata: { multiattach: "<is> True" }

# extVL with numDynamicAddresses and subnet
  VDU2_CP1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: net1 }
      fixed_ips:
      - subnet: { get_param: subnet1 }

# CPs of internal VLs are deleted when extManagedVLs and port are
# specified in InstantiateVnfRequest
  VDU2_CP2:
    type: OS::Neutron::Port
    properties:
      network: { get_param: net2 }

  VDU2_CP3:
    type: OS::Neutron::Port
    properties:
      network: { get_param: net3 }
