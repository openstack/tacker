data_types:
  tosca.datatypes.tacker.ActionMap:
    properties:
      trigger:
        type: string
        required: true
      action:
        type: string
        required: true
      params:
        type: map
        entry_schema:
          type: string
        required: false

  tosca.datatypes.tacker.AppActionMap:
    properties:
      condition:
        type: map
        entry_schema:
          type: string
        required: false
      actionname:
        type: string
        required: false
      cmd-action:
        type: string
        required: false

  tosca.datatypes.tacker.AppInfoParams:
    properties:
      app_name:
        type: string
        required: true
      app_port:
        type: string
        required: true
      ssh_username:
        type: string
        required: false
      ssh_password:
        type: string
        required: false
      app_status:
        type: tosca.dataypes.tacker.AppActionMap
        required: false
      app_memory:
        type: tosca.dataypes.tacker.AppActionMap
        required: false

  tosca.datatypes.tacker.OSInfoParams:
    properties:
      os_agent_info:
        type: tosca.dataypes.tacker.AppActionMap
        required: false
      os_proc_value:
        type: tosca.datatypes.tacker.AppActionMap
        required: false
      os_cpu_load:
        type: tosca.datatypes.tacker.AppActionMap
        required: false
      os_cpu_usage:
        type: tosca.datatypes.tacker.AppActionMap
        required: false


  tosca.datatypes.tacker.AppMonitoringParams:
    properties:
      application:
        type: tosca.datatypes.tacker.AppInfoParams
        required: false
      OS:
        type: tosca.datatypes.tacker.OSInfoParams
        required: false

  tosca.datatypes.tacker.AppMonitoringType:
    properties:
      name:
        type: string
        required: true
      zabbix_username:
        type: string
        required: true
      zabbix_password:
        type: string
        required: true
      zabbix_server_ip:
        type: string
        required: true
      zabbix_server_port:
        type: int
        required: true
      parameters:
        type: tosca.datatypes.tacker.AppMonitoringParams
        required: false



  tosca.datatypes.tacker.MonitoringParams:
    properties:
      monitoring_delay:
        type: int
        required: false
      count:
        type: int
        required: false
      interval:
        type: int
        required: false
      timeout:
        type: int
        required: false
      retry:
        type: int
        required: false
      port:
        type: int
        required: false

  tosca.datatypes.tacker.MonitoringType:
    properties:
      name:
        type: string
        required: true
      actions:
        type: map
        required: true
      parameters:
        type: tosca.datatypes.tacker.MonitoringParams
        required: false



  tosca.datatypes.compute_properties:
    properties:
      num_cpus:
        type: integer
        required: true
      mem_size:
        type: string
        required: true
      disk_size:
        type: string
        required: false
      mem_page_size:
        type: string
        required: false
      numa_node_count:
        type: integer
        constraints:
          - greater_or_equal: 1
        required: false
      numa_nodes:
        type: map
        required: false
      cpu_allocation:
        type: map
        required: false

  tosca.datatypes.tacker.VirtualIP:
    properties:
      ip_address:
        type: string
        required: true
        description: The virtual IP address allowed to be paired with.
      mac_address:
        type: string
        required: false
        description: The mac address allowed to be paired with specific virtual IP.


  tosca.datatypes.nfv.VnfcConfigurableProperties:
    properties:
      num_cpus:
        type: float
        required: false
      mem_size:
        type: string
        required: false
      image:
        type: string
        required: false
      command:
        type: list
        entry_schema:
          type: string
        required: false
      args:
        type: list
        entry_schema:
          type: string
        required: false
      ports:
        type: list
        entry_schema:
          type: string
        required: false
      config:
        type: string
        required: false

  tosca.datatypes.tacker.VduReservationMetadata:
    properties:
      resource_type:
        # TODO(niraj-singh): Need to add constraints
        # ``valid_values: [ physical_host, virtual_instance ]``
        # once Bug #1815755 is fixed.
        type: string
        required: true
        default: virtual_instance
      id:
        type: string
        required: true

policy_types:
  tosca.policies.tacker.Placement:
    derived_from: tosca.policies.Placement
    description: Defines policy for placement of VDU's.
    properties:
      policy:
        type: string
        required: false
        constraints:
          - valid_values: [ affinity, anti-affinity ]
        default: affinity
        description: Placement policy for target VDU's.
      strict:
        type: boolean
        required: false
        default: true
        description: If the policy is not mandatory, set this flag to 'false'. Setting this flag to 'false' allows the VDU deployment request to continue even if the nova-scheduler fails to assign compute hosts under the policy.

  tosca.policies.tacker.Failure:
    derived_from: tosca.policies.Root
    action:
      type: string

  tosca.policies.tacker.Failure.Respawn:
    derived_from: tosca.policies.tacker.Failure
    action: respawn

  tosca.policies.tacker.Failure.Terminate:
    derived_from: tosca.policies.tacker.Failure
    action: log_and_kill

  tosca.policies.tacker.Failure.Log:
    derived_from: tosca.policies.tacker.Failure
    action: log

  tosca.policies.tacker.Monitoring:
    derived_from: tosca.policies.Root
    properties:
      name:
        type: string
        required: true
      parameters:
        type: map
        entry_schema:
          type: string
        required: false
      actions:
        type: map
        entry_schema:
          type: string
        required: true

  tosca.policies.tacker.AppMonitoring:
    derived_from: tosca.policies.Root
    properties:
      name:
        type: string
        required: true
      parameters:
        type: map
        entry_schema:
          type: string
        required: false



  tosca.policies.tacker.Monitoring.NoOp:
    derived_from: tosca.policies.tacker.Monitoring
    properties:
      name: noop

  tosca.policies.tacker.Monitoring.Ping:
    derived_from: tosca.policies.tacker.Monitoring
    properties:
      name: ping

  tosca.policies.tacker.Monitoring.HttpPing:
    derived_from: tosca.policies.tacker.Monitoring.Ping
    properties:
      name: http-ping

  tosca.policies.tacker.Monitoring.Zabbix:
    derived_from: tosca.policies.tacker.Appmonitoring
    properties:
      name: zabbix


  tosca.policies.tacker.Alarming:
    derived_from: tosca.policies.Monitoring
    triggers:
      resize_compute:
        event_type:
          type: map
          entry_schema:
            type: string
          required: true
        metrics:
          type: string
          required: true
        condition:
          type: map
          entry_schema:
            type: string
          required: false
        action:
          type: map
          entry_schema:
            type: string
          required: true

  tosca.policies.tacker.Scaling:
    derived_from: tosca.policies.Scaling
    description: Defines policy for scaling the given targets.
    properties:
      increment:
        type: integer
        required: true
        description: Number of nodes to add or remove during the scale out/in.
      targets:
        type: list
        entry_schema:
          type: string
        required: true
        description: List of Scaling nodes.
      target_cpu_utilization_percentage:
        type: integer
        required: false
        description: The target average CPU utilization over all the pods which is used in Kubernetes environment
      min_instances:
        type: integer
        required: true
        description: Minimum number of instances to scale in.
      max_instances:
        type: integer
        required: true
        description: Maximum number of instances to scale out.
      default_instances:
        type: integer
        required: true
        description: Initial number of instances.
      cooldown:
        type: integer
        required: false
        default: 120
        description: Wait time (in seconds) between consecutive scaling operations. During the cooldown period, scaling action will be ignored

  tosca.policies.tacker.Reservation:
      derived_from: tosca.policies.Reservation
      reservation:
        start_actions:
          type: list
          entry_schema:
            type: string
            required: true
        before_end_actions:
          type: list
          entry_schema:
            type: string
            required: true
        end_actions:
          type: list
          entry_schema:
            type: string
            required: true
        properties:
          lease_id:
            type: string
            required: true
