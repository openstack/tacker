[metadata]
name = tacker
summary = OpenStack NFV Orchestration
description_file =
    README.rst
author = OpenStack
author_email = openstack-discuss@lists.openstack.org
home_page = https://docs.openstack.org/tacker/
python_requires = >=3.6
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[files]
packages =
    tacker
data_files =
    etc/tacker =
        etc/tacker/api-paste.ini
        etc/tacker/rootwrap.conf
    etc/rootwrap.d =
        etc/tacker/rootwrap.d/tacker.filters
    etc/init.d = etc/init.d/tacker-server
    etc/systemd/system =
        etc/systemd/system/tacker.service
        etc/systemd/system/tacker-conductor.service

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
console_scripts =
    tacker-db-manage = tacker.db.migration.cli:main
    tacker-server = tacker.cmd.eventlet.tacker_server:main
    tacker-conductor = tacker.cmd.eventlet.conductor:main
    tacker-rootwrap = oslo_rootwrap.cmd:main
    tacker-status = tacker.cmd.status:main
tacker.service_plugins =
    dummy = tacker.tests.unit.dummy_plugin:DummyServicePlugin
    vnfm = tacker.vnfm.plugin:VNFMPlugin
    nfvo = tacker.nfvo.nfvo_plugin:NfvoPlugin
    commonservices = tacker.plugins.common_services.common_services_plugin:CommonServicesPlugin
tacker.nfvo.vim.drivers =
    openstack = tacker.nfvo.drivers.vim.openstack_driver:OpenStack_Driver
    kubernetes = tacker.nfvo.drivers.vim.kubernetes_driver:Kubernetes_Driver
tacker.openstack.common.cache.backends =
    memory = tacker.openstack.common.cache._backends.memory:MemoryBackend
tacker.tacker.vnfm.drivers =
    noop = tacker.vnfm.infra_drivers.noop:VnfNoop
    openstack = tacker.vnfm.infra_drivers.openstack.openstack:OpenStack
    kubernetes = tacker.vnfm.infra_drivers.kubernetes.kubernetes_driver:Kubernetes
tacker.tacker.mgmt.drivers =
    noop = tacker.vnfm.mgmt_drivers.noop:VnfMgmtNoop
    openwrt = tacker.vnfm.mgmt_drivers.openwrt.openwrt:VnfMgmtOpenWRT
    vnflcm_noop = tacker.vnfm.mgmt_drivers.vnflcm_noop:VnflcmMgmtNoop
tacker.tacker.monitor.drivers =
    ping = tacker.vnfm.monitor_drivers.ping.ping:VNFMonitorPing
    http_ping = tacker.vnfm.monitor_drivers.http_ping.http_ping:VNFMonitorHTTPPing
tacker.tacker.app_monitor.drivers =
    zabbix = tacker.vnfm.monitor_drivers.zabbix.zabbix:VNFMonitorZabbix
tacker.tacker.alarm_monitor.drivers =
    ceilometer = tacker.vnfm.monitor_drivers.ceilometer.ceilometer:VNFMonitorCeilometer
tacker.tacker.policy.actions =
    autoscaling = tacker.vnfm.policy_actions.autoscaling.autoscaling:VNFActionAutoscaling
    respawn = tacker.vnfm.policy_actions.respawn.respawn:VNFActionRespawn
    log = tacker.vnfm.policy_actions.log.log:VNFActionLog
    log_and_kill = tacker.vnfm.policy_actions.log.log:VNFActionLogAndKill
    vdu_autoheal = tacker.vnfm.policy_actions.vdu_autoheal.vdu_autoheal:VNFActionVduAutoheal
oslo.config.opts =
    tacker.alarm_receiver = tacker.alarm_receiver:config_opts
    tacker.auth = tacker.auth:config_opts
    tacker.common.config = tacker.common.config:config_opts
    tacker.conductor.conductor_server = tacker.conductor.conductor_server:config_opts
    tacker.conf = tacker.conf.opts:list_opts
    tacker.keymgr = tacker.keymgr:config_opts
    tacker.nfvo.drivers.vim.kubernetes_driver = tacker.nfvo.drivers.vim.kubernetes_driver:config_opts
    tacker.nfvo.drivers.vim.openstack_driver = tacker.nfvo.drivers.vim.openstack_driver:config_opts
    tacker.nfvo.nfvo_plugin = tacker.nfvo.nfvo_plugin:config_opts
    tacker.plugins.fenix = tacker.plugins.fenix:config_opts
    tacker.service = tacker.service:config_opts
    tacker.sol_refactored.common.config = tacker.sol_refactored.common.config:config_opts
    tacker.vnflcm.vnflcm_driver = tacker.vnflcm.vnflcm_driver:config_opts
    tacker.vnfm.infra_drivers.kubernetes.kubernetes_driver = tacker.vnfm.infra_drivers.kubernetes.kubernetes_driver:config_opts
    tacker.vnfm.infra_drivers.openstack.openstack = tacker.vnfm.infra_drivers.openstack.openstack:config_opts
    tacker.vnfm.infra_drivers.openstack.translate_template = tacker.vnfm.infra_drivers.openstack.translate_template:config_opts
    tacker.vnfm.mgmt_drivers.openwrt.openwrt = tacker.vnfm.mgmt_drivers.openwrt.openwrt:config_opts
    tacker.vnfm.monitor = tacker.vnfm.monitor:config_opts
    tacker.vnfm.monitor_drivers.ceilometer.ceilometer = tacker.vnfm.monitor_drivers.ceilometer.ceilometer:config_opts
    tacker.vnfm.monitor_drivers.http_ping.http_ping = tacker.vnfm.monitor_drivers.http_ping.http_ping:config_opts
    tacker.vnfm.monitor_drivers.ping.ping = tacker.vnfm.monitor_drivers.ping.ping:config_opts
    tacker.vnfm.nfvo_client = tacker.vnfm.nfvo_client:config_opts
    tacker.vnfm.plugin = tacker.vnfm.plugin:config_opts
    tacker.wsgi = tacker.wsgi:config_opts

mistral.actions =
    tacker.vim_ping_action = tacker.nfvo.workflows.vim_monitor.vim_ping_action:PingVimAction

oslo.policy.enforcer =
    tacker = tacker.policy:get_enforcer

oslo.policy.policies =
    # The sample policies will be ordered by entry point and then by list
    # returned from that entry point. If more control is desired split out each
    # list_rules method into a separate entry point rather than using the
    # aggregate method.
    tacker = tacker.policies:list_rules
